$variants: "primary", "secondary", "accent", "light", "dark", "info", "success",
  "danger", "warning";
$styles: "solid", "outline", "muted";
$shapes: "rectangle", "square", "rounded", "pill", "circle";

/*----------------------------------
VARIANTS
Generates classes based on themes colors
----------------------------------*/
@mixin button-variant($variant: "primary") {
  background-color: var(--color--#{$variant});
  color: var(--text-color--#{$variant});
  path {
    fill: var(--text-color--#{$variant});
  }

  &:hover:not(:disabled) {
    background-color: var(--color--#{$variant}--hover);
  }
}

/*----------------------------------
STYLES
----------------------------------*/
@mixin button-style($variant: "primary", $style: "solid") {
  @if $style== "outline" {
    border: 2px solid var(--color--#{$variant});
    background-color: transparent;
    color: var(--color--#{$variant});
    path {
      fill: var(--color--#{$variant});
    }

    &:hover:not(:disabled) {
      background-color: var(--color--#{$variant});
      color: var(--text-color--#{$variant});
      path {
        fill: var(--text-color--#{$variant});
      }
    }
  } @else if $style== "muted" {
    background-color: var(--color--#{$variant}--muted);
    color: var(--color--#{$variant});
    path {
      fill: var(--color--#{$variant});
    }
    &:hover {
      background-color: var(--color--#{$variant}--muted);
      color: var(--color--#{$variant});
    }
  }
}

/*----------------------------------
SIZES
----------------------------------*/
$iconSize: (
  lg: 24px,
  md: 20px,
  sm: 16px,
  xs: 12px
);

@mixin button-size($size: "md") {
  @if $size== "sm" {
    font-size: 12px;
    padding: 0px var(--space--sm);
  } @else {
    padding: 0px var(--space--#{$size});
  }
  height: var(--input-size--#{$size});
  svg {
    height: map-get($iconSize, $size);
    width: map-get($iconSize, $size);
  }
}

/*----------------------------------
SHAPES
----------------------------------*/
@mixin button-shape($size: "md", $shape: "rectangle") {
  @if $shape== "rounded" {
    border-radius: 4px;
  } @else if $shape== "square" {
    height: var(--input-size--#{$size});
    width: var(--input-size--#{$size});
    padding: 0 !important;
  } @else if $shape== "circle" {
    width: var(--input-size--#{$size});
    height: var(--input-size--#{$size});
    padding: 0 !important;
    border-radius: 50%;
  } @else if $shape== "pill" {
    border-radius: var(--input-size--#{$size});
  }
}

/*----------------------------------
NORMALIZE
Contains the default properties of button
----------------------------------*/
.button,
.button-group > button,
.button-group > a {
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  outline: 0;
  white-space: nowrap;
  font-family: var(--font--content);
  text-decoration: none;
  font-size: 14px;
  line-height: 1;
  svg {
    margin-right: var(--space--xs);
  }
  &:disabled {
    cursor: not-allowed;
    opacity: 0.8;
  }
  &.is-loading {
    cursor: wait;
  }
  &.is-fluid {
    width: 100%;
  }
  &:hover {
    text-decoration: none;
  }
  @if mixin-exists(__button) {
    @include __button();
  }
  @include button-size;
}

.button-group {
  display: flex;
  > button,
  > a {
    flex: 0 0 auto;
  }
  &.is-stacked {
    flex-direction: column;
    > button,
    > a {
      width: 100%;
    }
  }
}

/*----------------------------------
GENNERATE CLASSES
----------------------------------*/
@each $variant in $variants {
  .button.is-#{$variant} {
    @include button-variant($variant);
    @each $style in $styles {
      &.is-#{$style} {
        @include button-style($variant, $style);
      }
    }
  }
  .button-group.is-#{$variant} {
    > button,
    > a {
      @include button-variant($variant);
    }
    @each $style in $styles {
      &.is-#{$style} {
        > button,
        > a {
          @include button-style($variant, $style);
        }
      }
    }
  }
}

@each $shape in $shapes {
  .button-group.is-#{$shape} > button,
  .button-group.is-#{$shape} > a,
  .button.is-#{$shape} {
    @include button-shape("md", $shape);
    @if $shape== "circle" or $shape== "square" {
      svg {
        margin: 0;
      }
    }
  }
}

@each $size in $styles-sizes {
  .button.is-#{$size} {
    @include button-size($size);
    @each $shape in $shapes {
      &.is-#{$shape} {
        @include button-shape($size, $shape);
      }
    }
  }

  .button-group.is-#{$size} {
    > button,
    > a {
      @include button-size($size);
    }
    @each $shape in $shapes {
      &.is-#{$shape} {
        > button,
        > a {
          @include button-shape($size, $shape);
        }
      }
    }
  }
}
