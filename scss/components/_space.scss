//--------------------------------------------------
// CONFIGURATION
//--------------------------------------------------

//---------- Config: Via SCSS Maps
$shilp-space-defaults: () !default;
$shilp-space-defaults: map-merge(
  (
    "sizes": $shilp-spaces
  ),
  $shilp-space-defaults
);

//---------- Local Variables
$space-sizes: map-get($shilp-space-defaults, "sizes");

//--------------------------------------------------
// MIXINS
//--------------------------------------------------

//SIZES
// Creates diffrent sizes for spacing
@mixin space--sizes($breakpoint) {
  @each $size, $value in $space-sizes {
    $className: breakpoint-class($breakpoint, space--#{$size});
    .#{$className} {
      --size: #{--space($size)};
    }
  }
}

//--------------------------------------------------
// CSS BLOCK & ELEMENTS
//--------------------------------------------------
.space {
  --size: 0;
  display: inline-flex;
  flex-wrap: wrap;
  > * {
    margin: 0;
  }
  &:not(.space--reverse):not(.space--stack) {
    > * {
      flex: 1 1 0; //Makes all the childs same width when wrapped;
      margin-right: var(--size);
    }
  }
}

//--------------------------------------------------
// MODIFIERS
//--------------------------------------------------

//---------- STACK
.space--stack {
  flex-direction: column;
  &:not(.space--reverse) {
    > * {
      margin-bottom: var(--size);
    }
  }
  &.space--reverse {
    > * {
      margin-top: var(--size);
    }
  }
}

//---------- REVERSE
.space--reverse:not(.space--stack) {
  > * {
    flex: 1 1 0; //Makes all the childs same width when wrapped;
    margin-left: var(--size);
  }
}

//---------- SIZE
@include space--sizes("phone");

//--------------------------------------------------
// MEDIA QUERY
//--------------------------------------------------
@each $breakpoint, $value in $shilp-breakpoints {
  @media only screen and (min-width: $value) {
    @include space--sizes($breakpoint);
  }
}
