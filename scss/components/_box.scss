//--------------------------------------------------
// CONFIGURATION
//--------------------------------------------------

//---------- Config: Via SCSS Maps
$shilp-box-defaults: () !default;
$shilp-box-defaults: map-merge(
  (
    sizes: (
      phone: 100%,
      phablet: 540px,
      tablet: 720px,
      laptop: 960px,
      desktop: 1140px
    )
  ),
  $shilp-box-defaults
);

//---------- Config: Via CSS Vars
$shilp-box-vars: () !default;
$shilp-box-vars: map-merge(
  (
    "size": map-deep-get($shilp-box-defaults, sizes, phone),
    "padding": 16px
  ),
  $shilp-box-vars
);

//---------- Local Variables
$box-sizes: map-get($shilp-box-defaults, "sizes");

//--------------------------------------------------
// MIXINS
//--------------------------------------------------
@mixin box($breakpoint) {
  max-width: map-get($box-sizes, $breakpoint);
}

//--------------------------------------------------
// CSS BLOCK & ELEMENTS
//--------------------------------------------------
.box {
  @include component-vars("box", $shilp-box-vars);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--box--padding);
  padding-right: var(--box--padding);
  &:not(.box--fluid) {
    max-width: var(--box--size);
  }
}

//Removes the padding given by .box class
//By adding negetive margin same as .box padding
// Helpful in mobile devices to make the element set to screen edge and horizontal scrolling
.-box {
  margin-left: -16px;
  margin-right: -16px;
}

//--------------------------------------------------
// MODIFIERS
//--------------------------------------------------
.box--fluid {
  --box--size: "none";
}

//--------------------------------------------------
// MEDIA QUERY
//--------------------------------------------------
@each $breakpoint, $value in $shilp-breakpoints {
  @media only screen and (min-width: $value) {
    .box:not(.box--fluid) {
      --box--size: #{$value};
    }
  }
}
