// DEFAULTS
$shilp-field-defaults: () !default;
$shilp-field-defaults: map-merge(
  (
    "radius": 3px,
    "size": "md",
    "border-width": 1px,
    "border-color": --color(grey, light),
    "optional-text": "(Optional)",
    "states": (
      danger,
      warning,
      success,
      info
    )
  ),
  $shilp-field-defaults
);

$field-radius: map-get($shilp-field-defaults, "radius");
$field-size: map-get($shilp-field-defaults, "size");
$field-border-width: map-get($shilp-field-defaults, "border-width");
$field-states: map-get($shilp-field-defaults, "states");
$field-border-color: map-get($shilp-field-defaults, "border-color");

//CUSTOM SELECT
$select-arrow-color: map-deep-get($shilp-colors, "grey", "default");
$select-arrow: m-icon("M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z", $select-arrow-color);

// FIELD SIZES
// Generates the size based on $shilp-input-sizes map
@mixin field-size($size) {
  .choice {
    &:not(.choice--custom) {
      height: --input-size($size);
      line-height: --input-size($size);
    }
  }

  .field-block,
  .field-block > * {
    font-size: map-get($shilp-input-font-sizes, $size);
  }
  textarea.field-block {
    padding: --space(xs);
  }
  .field-block:not(textarea) {
    height: --input-size($size);
    line-height: --input-size($size);
  }

  .field__before,
  .field__after {
    min-width: --input-size($size);
  }
  .field__icon {
    svg {
      height: map-get($shilp-input-icon-sizes, $size) !important;
      width: map-get($shilp-input-icon-sizes, $size) !important;
    }
  }
}
@mixin field-sizes {
  @each $size, $value in $shilp-input-sizes {
    &.field--#{$size} {
      @include field-size($size);
    }
  }
}

// FIELD STATES
@mixin field-states {
  @each $state in $field-states {
    &.field--#{$state} {
      //Input, Select, Textarea
      .field-block {
        border-color: --color($state);
        &:focus {
          box-shadow: inset 0 0 0 3px --color($state, lightest);
        }
      }
      .field__before,
      .field__after {
        border-color: --color($state);
        background-color: --color($state, lightest);
        color: --color($state, darker);
      }
      .field__danger {
        color: --color($state);
      }
    }
  }
}

// FIELD
.field {
  margin-bottom: --space(md);
  @include field-size($field-size);
  @include field-sizes;
  @include field-states;

  .field {
    margin-bottom: 0;
  }

  > label {
    display: flex;
    margin-bottom: 4px;
    color: --color(grey, dark);
    align-items: center;
  }

  > small {
    display: flex;
    margin-top: 4px;
    color: --color(grey);
  }
}

//THE BLOCK CONTAINING INPUT
.field-block {
  @include field-defaults;
  border: $field-border-width solid $field-border-color;
  border-radius: $field-radius;
  min-width: 0px; //When .field__group is used, the input becomes flex child.
  font-size: --font-size(h5);
  &:focus {
    box-shadow: inset 0 0 0 3px --color(grey, lightest);
    position: relative;
  }
  &:disabled {
    color: --color(grey);
    background-color: --color(grey, lightest);
  }
}
.field-block--view {
  padding-left: 0;
  padding-right: 0;
  border: none;
  > * {
    margin: 0;
  }
}

//GROUP ITEMS
.field__group {
  display: flex;
  align-items: stretch;
  > * {
    border-radius: 0;
    &:first-child {
      border-radius: $field-radius 0 0 $field-radius;
    }
    &:last-child {
      border-radius: 0 $field-radius $field-radius 0;
    }
    &:only-child {
      border-radius: $field-radius;
    }
  }
  > .field {
    + .field {
      margin-top: 0;
    }
  }
}

// BEFORE & AFTER
.field__before,
.field__after {
  flex: 0 0 auto;
  border: $field-border-width solid $field-border-color;

  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0px --space(xs);
  background-color: --color(grey, lighter);
  color: --color(grey, dark);
}
.field__before {
  border-right: none;
}
.field__after {
  border-left: none;
}

//FIELD LOADING ANIMATION
@keyframes fieldLoading {
  0% {
    content: "";
  }
  25% {
    content: ".";
  }
  50% {
    content: "..";
  }
  75% {
    content: "...";
  }
  100% {
    content: "....";
  }
}

.file {
  position: relative;
  input[type="file"],
  input[type="text"] {
    @include position(absolute, 0, 0, 0, 0);
    width: 100%;
    height: 100%;
    border: none;
    border-radius: $field-radius;
    @include field-defaults;
  }
  input[type="file"] {
    z-index: 2;
    opacity: 0;
    cursor: pointer;
  }
  input[type="text"] {
  }
  button {
    position: absolute;
    right: -1px;
    top: -1px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.field--optional {
  > label {
    &:after {
      content: map-get($shilp-field-defaults, "optional-text");
      font-style: italic;
      margin-left: --space(xs);
      font-size: --font-size(h6);
      color: --color(grey);
    }
  }
}
