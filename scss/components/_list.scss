//--------------------------------------------------
// CONFIGURATION
//--------------------------------------------------

//---------- Config: Via SCSS Maps
$shilp-list-defaults: () !default;
$shilp-list-defaults: map-merge(
  (
    "gaps": $shilp-spaces
  ),
  $shilp-list-defaults
);

//---------- Config: Via CSS Vars
$shilp-list-vars: () !default;
$shilp-list-vars: map-merge(
  (
    "gap": 0px
  ),
  $shilp-list-vars
);

//---------- Local Variables
$list-gaps: map-get($shilp-list-defaults, "gaps");

//--------------------------------------------------
// BLOCK & ELEMENTS
//--------------------------------------------------
.list {
  @include component-vars("list", $shilp-list-vars);
  gap: var(--list--gap);
  display: inline-grid;
  grid-auto-flow: column;
}

//--------------------------------------------------
// MODIFIERS
//--------------------------------------------------

//---------- GAP
@each $gap, $value in $list-gaps {
  .list--#{$gap} {
    --list--gap: #{$value};
  }
}
.list--0 {
  --list--gap: 0;
}

//---------- STACK
.list--stack {
  grid-auto-flow: row;
  &.list--fit {
    grid-auto-rows: min-content;
  }
}

//---------- FLUID
.list--fluid {
  display: grid;
}

.list--fit {
  grid-auto-columns: min-content;
}

//---------- GROUP
// Makes child buttons attached and handles radius & borders
.list--group {
  > .button:not(:first-child):not(:last-child),
  > .choice:not(:first-child):not(:last-child) .button {
    border-radius: 0;
  }

  &:not(.list--stack) {
    > .button:first-child,
    > .choice:first-child .button {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    > .button:last-child,
    > .choice:last-child .button {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    > .button + .button,
    > .choice + .choice .button {
      border-left: none;
    }
  }

  &.list--stack {
    > .button:first-child,
    > .choice:first-child .button {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
    > .button:last-child,
    > .choice:first-child .button {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    > .button + .button,
    > .choice + .choice .button {
      border-top: none;
    }
  }
}

//--------------------------------------------------
// MEDIA QUERY
//--------------------------------------------------
@each $breakpoint, $value in $shilp-breakpoints {
  @media only screen and (min-width: $value) {
    @each $gap, $value in $list-gaps {
      $className: breakpoint-class($breakpoint, list--#{$gap});
      .#{$className} {
        --list--gap: #{$value};
      }
    }
  }
}
