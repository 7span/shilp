// DEFAULTS
$styles-form-defaults: () !default;
$styles-form-defaults: map-merge(
  (
    "radius": 3px,
    "size": "md",
    "border-width": 1px,
    "border-color": --color(grey, light),
    "states": (
      danger,
      warning,
      success,
      info
    )
  ),
  $styles-form-defaults
);

$form-radius: map-get($styles-form-defaults, "radius");
$form-size: map-get($styles-form-defaults, "size");
$form-border-width: map-get($styles-form-defaults, "border-width");
$form-states: map-get($styles-form-defaults, "states");
$form-border-color: map-get($styles-form-defaults, "border-color");

//CUSTOM SELECT
$select-arrow-color: map-deep-get($styles-colors, "grey", "default");
$select-arrow: m-icon(
  "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z",
  $select-arrow-color
);

// FIELD SIZES
// Generates the size based on $styles-input-sizes map
@mixin field-size($size) {
  &.is-radio,
  &.is-checkbox {
    height: --input-size($size);
    line-height: --input-size($size);
  }
  .field__block {
    height: --input-size($size);
    line-height: --input-size($size);
  }
  .field__before,
  .field__after {
    min-width: --input-size($size);
  }
}
@mixin field-sizes {
  @each $size, $value in $styles-input-sizes {
    &.is-#{$size} {
      @include field-size($size);
    }
  }
}

// FIELD STATES
@mixin form-states {
  @each $state in $form-states {
    &.is-#{$state} {
      //Input, Select, Textarea
      .field__block {
        border-color: --color($state);
        &:focus {
          box-shadow: inset 0 0 0 3px --color($state, muted);
        }
      }
      .field__before,
      .field__after {
        border-color: --color($state);
        background-color: --color($state, muted);
        color: --color($state, hover);
      }
    }
  }
}

@mixin form-field-defaults {
  font-size: --font-size(span);
  font-family: --font-family(content);
  color: #000;
  width: 100%;
  outline: 0;
  padding: 0 --space(xs);
}

// FIELD
.field {
  margin-bottom: --space(md);
  @include field-size($form-size);
  @include field-sizes;
  @include form-states;

  .field {
    margin-bottom: 0;
  }

  //Radio, Checkbox
  &.is-radio,
  &.is-checkbox {
    display: flex;
    align-items: center;
    > label {
      margin-bottom: 0;
      margin-left: --space(xs);
      color: #000;
      cursor: pointer;
    }
  }

  //LOADING
  &.is-loading {
    > label {
      &:after {
        content: "";
        animation-name: fieldLoading;
        animation-duration: 1s;
        animation-iteration-count: infinite;
      }
    }
  }

  > label {
    display: flex;
    margin-bottom: 4px;
    color: --color(grey, dark);
  }

  > small {
    display: flex;
    margin-top: 4px;
    color: --color(grey);
  }

  //Input, Select, Textarea
  &__block {
    @include form-field-defaults;
    border: $form-border-width solid $form-border-color;
    border-radius: $form-radius;
    min-width: 0px; //When .field__group is used, the input becomes flex child.
    &:focus {
      box-shadow: inset 0 0 0 3px --color(primary, muted);
      position: relative;
    }
    &:disabled {
      color: --color(grey);
      background-color: --color(grey, lightest);
    }
  }

  //GROUP ITEMS
  &__group {
    display: flex;
    align-items: stretch;
    > * {
      border-radius: 0;
      &:first-child {
        border-radius: $form-radius 0 0 $form-radius;
      }
      &:last-child {
        border-radius: 0 $form-radius $form-radius 0;
      }
      &:only-child {
        border-radius: $form-radius;
      }
    }
    > .field {
      + .field {
        margin-top: 0;
      }
    }
  }

  &__before,
  &__after {
    flex: 0 0 auto;
    border: $form-border-width solid $form-border-color;

    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0px --space(xs);
    background-color: --color(grey, lighter);
    color: --color(grey, dark);
  }
  &__before {
    border-right: none;
  }
  &__after {
    border-left: none;
  }
}

@keyframes fieldLoading {
  0% {
    content: "";
  }
  25% {
    content: ".";
  }
  50% {
    content: "..";
  }
  75% {
    content: "...";
  }
  100% {
    content: "....";
  }
}

.select {
  position: relative;
  select {
    @include position(absolute);
    @include form-field-defaults;
    border-radius: $form-radius - 1;
    border: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  &:after {
    content: "";
    @include position(absolute, 0, 0, 0, auto);
    width: 32px;
    height: 100%;
    display: block;
    background-image: url($select-arrow);
    background-repeat: no-repeat;
    background-position: center;
  }
}
