//--------------------------------------------------
// CONFIGURATION
//--------------------------------------------------

//---------- Config: Via SCSS Maps
$shilp-blocks-defaults: () !default;
$shilp-blocks-defaults: map-merge(
  (
    "gaps": $shilp-spaces,
    "grids": 12
  ),
  $shilp-blocks-defaults
);

//---------- Local Variables
$blocks-grids: map-get($shilp-blocks-defaults, "grids");
$blocks-gaps: map-get($shilp-blocks-defaults, "gaps");

//--------------------------------------------------
// MIXINS
//--------------------------------------------------

// RESPONSIVE BLOCKS GAP
// Generates the responsive classes based on breakpoint. with all the gap values.
@mixin blocks-gap($breakpoint) {
  @each $gap, $value in $blocks-gaps {
    $className: breakpoint-class($breakpoint, blocks--#{$gap});
    .#{$className} {
      --gap: #{$value};
    }
  }
}

// BLOCK SIZE
// Defines the block size based on breakpoint and a class name.
@mixin block-size($breakpoint) {
  // 1 - 12
  @for $i from 1 through $blocks-grids {
    $className: breakpoint-class($breakpoint, block--#{$i});
    .#{$className} {
      --size: #{(100% / $blocks-grids) * $i};
    }
  }

  // Auto
  $autoClassName: breakpoint-class($breakpoint, block--auto);
  .#{$autoClassName} {
    flex-grow: 1;
    flex-basis: 0;
  }

  // Fix
  $fixClassName: breakpoint-class($breakpoint, block--fix);
  .#{$fixClassName} {
    flex: none;
    display: block;
    width: auto;
  }
}

//--------------------------------------------------
// CSS BLOCK & ELEMENTS
//--------------------------------------------------

.blocks {
  --gap: 0;
  display: flex;
  flex-wrap: wrap;
  margin-left: calc(-1 * var(--gap));
  margin-right: calc(-1 * var(--gap));
  > .block {
    padding-left: var(--gap);
    padding-right: var(--gap);
  }
}
.block {
  --size: 100%;
  max-width: var(--size);
  width: var(--size);
}
@include block-size("phone");
@include blocks-gap("phone");

//--------------------------------------------------
// MEDIA QUERY
//--------------------------------------------------
@each $breakpoint, $value in $shilp-breakpoints {
  @media only screen and (min-width: $value) {
    @include blocks-gap($breakpoint);
    @include block-size($breakpoint);
  }
}
