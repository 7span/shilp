$field-states: "danger", "warning", "success", "info";

/**
FIELD SIZES
Generates the size based on $styles-input-sizes map
*/
@mixin field-size($size) {
  &.is-radio,
  &.is-checkbox {
    height: var(--input-size--#{$size});
    line-height: var(--input-size--#{$size});
  }
  .field__block {
    height: var(--input-size--#{$size});
    line-height: var(--input-size--#{$size});
  }
  .field__before,
  .field__after {
    min-width: var(--input-size--#{$size});
  }
}
@mixin field-sizes {
  @each $size, $value in $styles-input-sizes {
    &.is-#{$size} {
      @include field-size($size);
    }
  }
}

/**
FIELD STATES
*/
@mixin field-states {
  @each $state in $field-states {
    &.is-#{$state} {
      //Input, Select, Textarea
      .field__block {
        border-color: var(--color--#{$state});
        &:focus {
          box-shadow: 0 0 0 3px var(--color--#{$state}--muted);
        }
      }
      .field__before,
      .field__after {
        border-color: var(--color--#{$state});
        background-color: var(--color--#{$state}--muted);
        color: var(--color--#{$state}--hover);
      }
    }
  }
}

/*----------------------------------
Form Fields
----------------------------------*/

.field {
  margin-bottom: var(--space--md);
  @include field-size($default-input-size);
  @include field-sizes;
  @include field-states;

  .field {
    margin-bottom: 0;
  }

  //Radio, Checkbox
  &.is-radio,
  &.is-checkbox {
    display: flex;
    align-items: center;
    > label {
      margin-bottom: 0;
      margin-left: var(--space--xs);
      color: #000;
      cursor: pointer;
    }
  }

  //LOADING
  &.is-loading {
    > label {
      &:after {
        content: "";
        animation-name: fieldLoading;
        animation-duration: 1s;
        animation-iteration-count: infinite;
      }
    }
  }

  > label {
    display: flex;
    margin-bottom: 4px;
    color: var(--color--grey--dark);
  }

  > small {
    display: flex;
    margin-top: 4px;
    color: var(--color--grey);
  }

  //Input, Select, Textarea
  &__block {
    outline: 0;
    padding: 0 var(--space--xs);
    border: $input-border solid var(--color--grey);
    border-radius: $default-input-radius;
    font-size: var(--font-size--span);
    font-family: var(--font--content);
    color: #000;
    width: 100%;
    min-width: 0px; //When .field__group is used, the input becomes flex child.
    &:focus {
      box-shadow: 0 0 0 3px var(--color--primary--muted);
      position: relative;
    }
    &:disabled {
      color: var(--color--grey);
      background-color: var(--color--grey--lightest);
    }
  }

  //GROUP ITEMS
  &__group {
    display: flex;
    align-items: stretch;
    > * {
      &:not(:first-child):not(:last-child) {
        border-radius: 0;
      }
      &:first-child {
        border-top-left-radius: $default-input-radius;
        border-bottom-left-radius: $default-input-radius;
      }
      &:last-child {
        border-top-right-radius: $default-input-radius;
        border-bottom-right-radius: $default-input-radius;
      }
    }
    > .field {
      + .field {
        margin-top: 0;
      }
    }
  }

  &__before,
  &__after {
    flex: 0 0 auto;
    border: $input-border solid var(--color--grey);

    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0px var(--space--xs);
    background-color: var(--color--grey--lighter);
    color: var(--color--grey--dark);
  }
  &__before {
    border-right: none;
  }
  &__after {
    border-left: none;
  }
}

@keyframes fieldLoading {
  0% {
    content: "";
  }
  25% {
    content: ".";
  }
  50% {
    content: "..";
  }
  75% {
    content: "...";
  }
  100% {
    content: "....";
  }
}
