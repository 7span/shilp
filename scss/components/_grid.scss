$grids: 12;

/*----------------------------------
MIXINS
----------------------------------*/
//ROW
@mixin row($bp) {
  @include row-gap($bp, false);
  &.is-multi {
    @include row-gap($bp, true);
    > .ss-col {
      @include col-gap($bp, true);
    }
  }
}

//ROW GAP
@mixin row-gap($bp, $multi) {
  &:not(.no-gap) {
    $gap: calc(-1 * var(--gap--#{$bp}));
    @if $multi {
      margin: $gap;
    } @else {
      margin-left: $gap;
      margin-right: $gap;
    }
  }
}

//COLUMN
@mixin col($bp) {
  @for $i from 1 through $grids {
    $className: null;
    @if ($bp==$default-breakpoint) {
      $className: is-#{$i};
    } @else {
      $className: #{$bp}--is-#{$i};
    }
    &.#{$className} {
      flex: 0 0 (100% / $grids) * $i;
      max-width: (100% / $grids) * $i;
    }
  }
}

//COLUMN GAP
@mixin col-gap($bp, $multi) {
  $gap: var(--gap--#{$bp});
  @if $multi {
    padding: $gap;
  } @else {
    padding-left: $gap;
    padding-right: $gap;
  }
}

//GRID
@mixin grid($bp) {
  @for $size from 1 through 12 {
    $className: null;
    @if ($bp==$default-breakpoint) {
      $className: is-#{$size};
    } @else {
      $className: #{$bp}--is-#{$size};
    }
    &.#{$className} {
      //Ocupies the space required for content.
      grid-template-columns: repeat($size, minmax(min-content, max-content));
      &.is-fluid {
        //Distributes across available space.
        grid-template-columns: repeat($size, 1fr);
      }
    }
  }
}

/*----------------------------------
CSS RULES
----------------------------------*/
.ss-row {
  display: flex;
  flex-wrap: wrap;
  @include row($default-breakpoint);
  &.no-gap {
    > .ss-col {
      padding-left: 0;
      padding-right: 0;
    }
  }
  @if ($debug) {
    border: 1px dotted red;
  }
}

.ss-col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  @include col($default-breakpoint);
  @include col-gap($default-breakpoint, false);
  @if ($debug) {
    border: 1px dotted blue;
  }
}

.ss-grid {
  display: grid;
  gap: var(--gap--md);
  @include grid($default-breakpoint);
}

/*----------------------------------
MEDIA QUERIES
----------------------------------*/
@include loop-breakpoint() using ($bp) {
  .ss-row {
    @include row($bp);
  }
  .ss-col {
    @include col($bp);
    @include col-gap($bp, false);
  }
}
