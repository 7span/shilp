//TEXT SIZES
@each $size, $value in $shilp-font-sizes {
  .text--#{$size} {
    font-size: --text($size);
  }
}

// TEXT WEIGHTS
.text--thin {
  font-weight: lighter;
}
.text--normal {
  font-weight: normal;
}
.text--bold {
  font-weight: bold;
}

//ITALIC
.text--italic {
  font-style: italic;
}

//UNDERLINE
.text--underline {
  text-decoration: underline;
}

//UPPERCASE
.text--uppercase {
  text-transform: uppercase;
}

.text--strikethrough {
  text-decoration: line-through;
}

.text--numeric {
  font-variant-numeric: tabular-nums;
}

// TEXT COLOR
@each $color, $shades in $shilp-colors {
  @each $shade, $code in $shades {
    @if ($shade== "default") {
      .text--#{$color} {
        color: --color($color) !important;
      }
    } @else {
      .text--#{$color}--#{$shade} {
        color: --color($color, $shade) !important;
      }
    }
  }
}

//--------------------------------------------------
// ALIGNMENT
// Alignment has responsive classes too.
//--------------------------------------------------
$shilp-text-aligns: "left", "right", "center", "justify";
$shilp-text-logical-aligns: (
  "left": "start",
  "right": "end",
  "center": "center",
  "justify": "justify"
);

@mixin shilp-text-align-rules($breakpoint) {
  @each $align in $shilp-text-aligns {
    $className: breakpoint-class($breakpoint, text--#{$align});
    .#{$className} {
      text-align: #{$align}; //Fallback for browsers that doesn't support logical directions
      text-align: #{map-get($shilp-text-logical-aligns, $align)};
    }
  }
}

@include shilp-text-align-rules("phone");

//Media Query
@each $breakpoint, $value in $shilp-breakpoints {
  @media only screen and (min-width: $value) {
    @include shilp-text-align-rules($breakpoint);
  }
}
