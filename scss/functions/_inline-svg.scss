/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }
  @return $string;
}

// Prepares a string for inline SVG
@function svg-inline($string) {
  $result: str-replace(
    $string,
    "<svg",
    "<svg xmlns='http://www.w3.org/2000/svg'"
  );
  $result: str-replace($result, "%", "%25");
  $result: str-replace($result, '"', "%22");
  $result: str-replace($result, "'", "%27");
  $result: str-replace($result, " ", "%20");
  $result: str-replace($result, "<", "%3C");
  $result: str-replace($result, ">", "%3E");
  $result: str-replace($result, "#", "%23");
  @return "data:image/svg+xml;utf8," + $result;
}

@function m-icon(
  $path,
  $color: currentColor,
  $size: 24px,
  $view-box: "0 0 24 24"
) {
  $svg-string: '<svg style="width:#{$size};height:#{$size}" viewBox="#{$view-box}"><path fill="#{$color}" d="#{$path}" /></svg>';
  @return svg-inline($svg-string);
}
